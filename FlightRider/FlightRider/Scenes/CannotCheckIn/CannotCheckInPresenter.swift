//
//  CannotCheckInPresenter.swift
//  FlightRider
//
//  Created by Tomi on 2019. 10. 31..
//  Copyright (c) 2019. Tomi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CannotCheckInPresentationLogic
{
    func requestRemaningTimeCalculation(request: CannotCheckIn.CalculateTime.Request)
    func fetchStoredData(response: CannotCheckIn.StoredData.Response)
}

class CannotCheckInPresenter: CannotCheckInPresentationLogic
{

  weak var viewController: CannotCheckInDisplayLogic?
  
    //MARK: - Request functions
    
    func requestRemaningTimeCalculation(request: CannotCheckIn.CalculateTime.Request){
        let deltaTime = Calendar.current.date(byAdding: .day, value:-2, to: request.departureDate!)! - Date()
        let timeResult = convertToDaysHoursMinutes(interval: deltaTime)
        viewController?.displayRemainingTime(response: CannotCheckIn.CalculateTime.Response(days: timeResult.days, hours: timeResult.hours, minutes: timeResult.minutes))
    }
    
    //MARK: - Fetch functions
    
    func fetchStoredData(response: CannotCheckIn.StoredData.Response) {
        let viewModel = CannotCheckIn.StoredData.ViewModel(iataNumber: response.iataNumber, departureDate: response.departureDate, image: response.image)
        viewController?.fetchStoredData(viewModel: viewModel)
    }
    
    //MARK: - Local functions
    
    func convertToDaysHoursMinutes(interval: TimeInterval) -> Time{
        let daysFraction = interval / 86400
        let days = Double(Int(daysFraction))
        let hoursFraction = (daysFraction - days) * 24
        let hours = Double(Int(hoursFraction))
        let minutesFraction = (hoursFraction - hours) * 60
        let minutes = Int(minutesFraction)
        return Time(days: String(Int(days)), hours: String(Int(hours)), minutes: String(minutes))
    }
}
