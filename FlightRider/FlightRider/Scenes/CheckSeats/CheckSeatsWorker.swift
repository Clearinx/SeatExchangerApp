//
//  CheckSeatsWorker.swift
//  FlightRider
//
//  Created by Tomi on 2019. 11. 04..
//  Copyright (c) 2019. Tomi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CheckSeatsWorkerProtocol {
    
    var interactor : CheckSeatsBusinessLogic? { get set }
    
    func requestAirplaneModel(request: CheckSeats.GetAirplaneModel.Request)
}

class CheckSeatsWorker : CheckSeatsWorkerProtocol
{
    weak var interactor : CheckSeatsBusinessLogic?
    
    //MARK: - Request functions
    
    func requestAirplaneModel(request: CheckSeats.GetAirplaneModel.Request) {
        let path = Bundle.main.path(forResource: "AirplaneModels", ofType: "json")!
        let data = try? String(contentsOf: URL(fileURLWithPath: path))
        if let data = data{
            let jsonData = JSON(parseJSON: data)
            let jsonArray = jsonData.arrayValue
            let jsonValueOptional = jsonArray.filter{$0["modelName"].stringValue == request.airplaneType}.first
            if let jsonValue = jsonValueOptional{
                let actualType = AirplaneModel(modelName: jsonValue["modelName"].stringValue, numberOfSeats: jsonValue["numberOfSeats"].intValue, latestColumn: jsonValue["columns"].stringValue)
                let response = CheckSeats.GetAirplaneModel.Response(airplaneModel: actualType)
                interactor?.fetchAirplaneModel(response: response)
            }
            else{
                print("Type could not find within JSON")
            }
        }
        else{
            print("JSON file could not found")
        }
    }
}
