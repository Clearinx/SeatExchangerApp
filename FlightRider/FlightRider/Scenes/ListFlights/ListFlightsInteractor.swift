//
//  ListFlightsInteractor.swift
//  FlightRider
//
//  Created by Tomi on 2019. 10. 31..
//  Copyright (c) 2019. Tomi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListFlightsBusinessLogic
{
    func fetchDataFromPreviousViewController(dataModel: Login.DataStore.ListViewDataModel)
    func pushDatabaseObjectsToModel(results: ListFlights.DataStore.Results)
    func requestLoadUserData(request: ListFlights.UserData.EmptyRequest)
}

protocol ListFlightsDataStore
{
    var dataStore: ListFlights.DataStore.DataStore { get set }
}

class ListFlightsInteractor: ListFlightsBusinessLogic, ListFlightsDataStore
{
    var presenter: ListFlightsPresentationLogic?
    var worker: ListFlightsWorker?
    var dataStore = ListFlights.DataStore.DataStore()
    var databaseWorker = DatabaseWorker ()
    
    func requestLoadUserData(request: ListFlights.UserData.EmptyRequest) {
        let newRequest = ListFlights.UserData.Request(userUid: dataStore.uid, userEmail: dataStore.email)
        worker = ListFlightsWorker()
        worker?.interactor = self
        worker?.databaseWorker = databaseWorker
        worker?.requestLoadUserData(request: newRequest)
    }
    
    func pushDatabaseObjectsToModel(results: ListFlights.DataStore.Results) {
        if let localUser = results.localUser{
            dataStore.user = localUser
        }
        if let cloudUser = results.cloudUser{
            dataStore.userRecord = cloudUser
        }
    }
    
    func fetchDataFromPreviousViewController(dataModel: Login.DataStore.ListViewDataModel) {
        dataStore.email = dataModel.email
        dataStore.uid = dataModel.uid
        dataStore.userRecord = CloudUser()
        dataStore.flights = [ManagedFlight]()
    }
}
