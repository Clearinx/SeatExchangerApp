//
//  LoginInteractor.swift
//  FlightRider
//
//  Created by Tomi on 2019. 10. 29..
//  Copyright (c) 2019. Tomi. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogic
{
  //func doSomething(request: Login.LoginFields.Request)
    func fetchRememberMeSwitchChanged(email: String?, password: String?, isOn: Bool)
    func fetchStoredLoginData() -> LoginData
    
}

protocol LoginDataStore
{
  //var name: String { get set }
}

class LoginInteractor: LoginBusinessLogic, LoginDataStore
{
    func fetchStoredLoginData() -> LoginData {
        worker = LoginWorker()
        let loginData = worker!.fetchStoredLoginData()
        //presenter = LoginPresenter()
        //presenter?.setSwitchState(loginData: loginData)
        return loginData
    }
    
    
  var presenter: LoginPresentationLogic?
  var worker: LoginWorker?
  var databaseWorker = DatabaseWorker()
  //var name: String = ""
  
  // MARK: Do something

  
  
  /*func doSomething(request: Login.LoginFields.Request)
  {
    worker = LoginWorker()
    worker?.doSomeWork()
    
    let response = Login.LoginFields.Response()
    presenter?.presentSomething(response: response)
  }*/
    
    func fetchRememberMeSwitchChanged(email: String?, password: String?, isOn: Bool) {
        worker = LoginWorker()
        if isOn {
            if email != nil && password != nil{
                worker?.rememberMeSwitchChanged(email: email!, password: password!)
            }
        }
        else {
            worker?.switchOffIsRemember()
        }
    }
}
